public class CircularList {

	Node initialNode;
	int lenght=0;
	
	//supondo txt com pelo menos 1 elemento
	public CircularList(String txt) {
		
		//cria primeiro elemento
		this.initialNode = new Node (txt.charAt(0));
		this.initialNode.nextNode = this.initialNode;
		this.initialNode.previousNode = this.initialNode;
		this.lenght=1;
		
		//cria elementos seguintes
		Node previousNode = this.initialNode;		
		for (int i=1; i<txt.length(); i++) {
			
			//ajusta o novo no
			char c = txt.charAt(i);
			Node node = new Node (c);
			node.previousNode = previousNode;
			node.nextNode = this.initialNode;
			
			//ajusta no anterior
			previousNode.nextNode = node;
			
			//ajusta primeiro no
			this.initialNode.previousNode = node;
			this.lenght++;

			previousNode = node;			
		
		}
		
	}


	protected void appendNode(char c) {
		Node node = new Node (c);
		node.nextNode = this.initialNode;
		node.previousNode = this.initialNode.previousNode;
		this.initialNode.previousNode.nextNode = node;
		this.lenght++;
	}
	
	//supondo ter pelo menos 1 elemento
	protected void removeFirstNode () {
		//se tiver somente um elemento, torna initialNode = null;
		if (this.initialNode.nextNode==this.initialNode) {
			this.initialNode=null;
		}
		else { 
			Node newInitialNode = this.initialNode.nextNode; 
			
			//o segundo elemento passa a apontar para o penultimo da lista
			newInitialNode.previousNode = this.initialNode.previousNode;

			
			//o ultimo elemento passa a apontar para o segundo da lista
			this.initialNode.previousNode = newInitialNode;
			

			//seta initialNode
			this.initialNode = newInitialNode;
		}
		this.lenght--;
	}
	
	
	
	public String toString () {
		String s = this.initialNode.c + "";
		Node n = this.initialNode.nextNode;
		
		while (n!=this.initialNode) {
			s += n.c;
			n = n.nextNode;
		}
		
		return s;
	}
	
	
	
	class Node {		
		
		char c;
		Node nextNode;
		Node previousNode;
		
		protected Node (char c) {
			this.c = c;
			this.nextNode = null;
			this.previousNode = null;
		}		
	}
	
	public static void main(String[] args) {
		String s = "12345";
		CircularList cl = new CircularList(s);
		System.out.println("txt = " + cl.toString());
		cl.removeNode();
		System.out.println("txt = " + cl.toString());

	}

}
